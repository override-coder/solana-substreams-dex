// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Swaps {
    #[prost(message, repeated, tag="1")]
    pub data: ::prost::alloc::vec::Vec<TradeData>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TradeData {
    #[prost(int64, tag="2")]
    pub block_time: i64,
    #[prost(uint64, tag="3")]
    pub block_slot: u64,
    #[prost(string, tag="4")]
    pub tx_id: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub signer: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub pool_address: ::prost::alloc::string::String,
    #[prost(string, tag="7")]
    pub base_mint: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub quote_mint: ::prost::alloc::string::String,
    #[prost(string, tag="9")]
    pub base_vault: ::prost::alloc::string::String,
    #[prost(string, tag="10")]
    pub quote_vault: ::prost::alloc::string::String,
    #[prost(int64, tag="11")]
    pub base_amount: i64,
    #[prost(int64, tag="12")]
    pub quote_amount: i64,
    #[prost(uint32, tag="13")]
    pub base_decimals: u32,
    #[prost(uint32, tag="14")]
    pub quote_decimals: u32,
    #[prost(int64, tag="15")]
    pub base_reserves: i64,
    #[prost(int64, tag="16")]
    pub quote_reserves: i64,
    #[prost(bool, tag="17")]
    pub is_inner_instruction: bool,
    #[prost(uint32, tag="18")]
    pub instruction_index: u32,
    #[prost(string, tag="19")]
    pub instruction_type: ::prost::alloc::string::String,
    #[prost(uint32, tag="20")]
    pub inner_instruxtion_index: u32,
    #[prost(string, tag="21")]
    pub outer_program: ::prost::alloc::string::String,
    #[prost(string, tag="22")]
    pub inner_program: ::prost::alloc::string::String,
    #[prost(uint64, tag="23")]
    pub txn_fee_lamports: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pools {
    #[prost(message, repeated, tag="1")]
    pub pools: ::prost::alloc::vec::Vec<Pool>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pool {
    #[prost(string, tag="1")]
    pub program: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub address: ::prost::alloc::string::String,
    #[prost(uint64, tag="3")]
    pub created_at_timestamp: u64,
    #[prost(uint64, tag="4")]
    pub created_at_block_number: u64,
    #[prost(string, tag="5")]
    pub coin_mint: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub pc_mint: ::prost::alloc::string::String,
    #[prost(bool, tag="7")]
    pub is_pump_fun: bool,
    #[prost(string, tag="8")]
    pub tx_id: ::prost::alloc::string::String,
}
// @@protoc_insertion_point(module)
